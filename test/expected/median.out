CREATE TABLE intvals(val int, color text);
-- Test empty table
SELECT median(val) FROM intvals;
 median 
--------
       
(1 row)

-- Integers with odd number of values
INSERT INTO intvals VALUES
       (1, 'a'),
       (2, 'c'),
       (9, 'b'),
       (7, 'c'),
       (2, 'd'),
       (-3, 'd'),
       (2, 'e');
SELECT * FROM intvals ORDER BY val;
 val | color 
-----+-------
  -3 | d
   1 | a
   2 | c
   2 | e
   2 | d
   7 | c
   9 | b
(7 rows)

SELECT median(val) FROM intvals;
 median 
--------
      2
(1 row)

-- Integers with NULLs and even number of values
INSERT INTO intvals VALUES
       (99, 'a'),
       (NULL, 'a'),
       (NULL, 'e'),
       (NULL, 'b'),
       (7, 'c'),
       (0, 'd');
SELECT * FROM intvals ORDER BY val;
 val | color 
-----+-------
  -3 | d
   0 | d
   1 | a
   2 | e
   2 | d
   2 | c
   7 | c
   7 | c
   9 | b
  99 | a
     | a
     | e
     | b
(13 rows)

SELECT median(val) FROM intvals;
 median 
--------
      2
(1 row)

-- Text values
CREATE TABLE textvals(val text, color int);
INSERT INTO textvals VALUES
       ('erik', 1),
       ('mat', 3),
       ('rob', 8),
       ('david', 9),
       ('lee', 2);
SELECT * FROM textvals ORDER BY val;
  val  | color 
-------+-------
 david |     9
 erik  |     1
 lee   |     2
 mat   |     3
 rob   |     8
(5 rows)

SELECT median(val) FROM textvals;
 median 
--------
 lee
(1 row)

-- Test large table with timestamps
CREATE TABLE timestampvals (val timestamptz);
INSERT INTO timestampvals(val)
SELECT TIMESTAMP 'epoch' + (i * INTERVAL '1 second')
FROM generate_series(0, 100000) as T(i);
SELECT median(val) FROM timestampvals;
            median            
------------------------------
 Thu Jan 01 13:53:20 1970 PST
(1 row)

--test even number of values
CREATE TABLE evenvals(val int, color text, magnitude float);
INSERT INTO evenvals VALUES
       (10, 'a', 1.0),
       (9, 'b', 5.0),
       (8, 'c', 2.0),
       (7, 'd', 7.0),
       (5, 'e', 3.0),
       (4, 'f', 4.0),
       (3, 'g', 6.0),
       (2, 'h', 8.0);
SELECT * FROM evenvals ORDER BY val;
 val | color | magnitude 
-----+-------+-----------
   2 | h     |         8
   3 | g     |         6
   4 | f     |         4
   5 | e     |         3
   7 | d     |         7
   8 | c     |         2
   9 | b     |         5
  10 | a     |         1
(8 rows)

SELECT median(val) FROM evenvals;
 median 
--------
      5
(1 row)

SELECT * FROM evenvals ORDER BY color;
 val | color | magnitude 
-----+-------+-----------
  10 | a     |         1
   9 | b     |         5
   8 | c     |         2
   7 | d     |         7
   5 | e     |         3
   4 | f     |         4
   3 | g     |         6
   2 | h     |         8
(8 rows)

SELECT median(color) FROM evenvals;
 median 
--------
 d
(1 row)

SELECT * FROM evenvals ORDER BY magnitude;
 val | color | magnitude 
-----+-------+-----------
  10 | a     |         1
   8 | c     |         2
   5 | e     |         3
   4 | f     |         4
   9 | b     |         5
   3 | g     |         6
   7 | d     |         7
   2 | h     |         8
(8 rows)

SELECT median(magnitude) FROM evenvals;
 median 
--------
      4
(1 row)

-- SELECT * FROM evenvals ORDER BY (val, color, magnitude);
-- TODO the following doesn't work, should it?
-- SELECT median((val, color, magnitude)) FROM evenvals;
--test all the same value
CREATE TABLE samevals(val int);
INSERT INTO samevals VALUES
       (72);
SELECT * FROM samevals ORDER BY val;
 val 
-----
  72
(1 row)

SELECT median(val) FROM evenvals;
 median 
--------
      5
(1 row)

INSERT INTO samevals VALUES
       (72);
SELECT * FROM samevals ORDER BY val;
 val 
-----
  72
  72
(2 rows)

SELECT median(val) FROM samevals;
 median 
--------
     72
(1 row)

INSERT INTO samevals SELECT 72 FROM generate_series(1,100000);
SELECT median(val) FROM samevals;
 median 
--------
     72
(1 row)

